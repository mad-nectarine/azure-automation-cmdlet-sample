param (
	[Parameter(Mandatory=$true)][string]$SubscriptionId,
	[Parameter(Mandatory=$true)][string]$ResourceGroupName,
 	[Parameter(Mandatory=$false)][string]$AutomationConnectionName = 'AzureRunAsConnection',
  	[Parameter(Mandatory=$false)][string]$AutomationCertificateName = 'AzureRunAsCertificate'
 )

######################### functions #########################

function LoginOnAutomation(
    [string] $SubscriptionId,
    [string] $AutomationConnectionName = 'AzureRunAsConnection',
    [string] $AutomationCertificateName = 'AzureRunAsCertificate'){

    $Certificate = Get-AutomationCertificate  `
				-Name $AutomationCertificateName  `
			 	-ErrorAction Stop

    $Connection = Get-AutomationConnection  `
				    -Name $AutomationConnectionName `
				    -ErrorAction Stop

    ### Add-AzureRMAccount for load needed assemblies
    $Account = Add-AzureRMAccount  `
	    -ServicePrincipal  `
	    -Tenant $Connection.TenantID  `
	    -ApplicationId $Connection.ApplicationID  `
	    -CertificateThumbprint $Connection.CertificateThumbprint `
	    -ErrorAction Stop
    Set-AzureRmContext -SubscriptionID $SubscriptionId	

    return @{
        Certificate = $Certificate
        Connection = $Connection
        Account = $Account
        TenantId = $Connection.TenantID
        ClientId = $Connection.ApplicationID
    }    
}

######################### Login #########################

### ServicePrincipal Login
$Login = LoginOnAutomation $SubscriptionId $AutomationConnectionName $AutomationCertificateName

#if you need select subscription 
#$SubscriptionId = Get-AutomationVariable -Name 'Hoge-SubscriptionId'
#Select-AzureRmSubscription -SubscriptionId $SubscriptionId

######################### Stop VM #########################

#get VMs
$VMList = Get-AzureRmVM -ResourceGroupName $ResourceGroupName

#you can view the output object of Get-AzureRmVM
#Write-Output Input-Object $VMList 

#VMs not to stop
$SkipVMList = @("hoge-vm-name","fuga-vm-name")
	
foreach($VM in $VMList){	
	
	$isSkip = 0
	foreach($SkipName in $SkipVMList){
		if($SkipName -eq $VM.Name){
			#if skip
			$isSkip = 1	
			break
		}
	}

	if($isSkip -eq 0){
		#stop VM
		Write-Output "===============================================" 
		Write-Output ("[" + (Get-Date -format "yyyy-MM-dd HH:mm:ss") + "] " + ($VM.Name + " stopping..."))  	
		Stop-AzureRmVM -Id $VM.Id -Name $VM.Name -Force
	} else {
		#skip to stop VM
		Write-Output "==============================================="
		Write-Output ("[" + (Get-Date -format "yyyy-MM-dd HH:mm:ss") + "] " + ("skip to stop " + $VM.Name))
	}
}
